name: Weaviate POC Test

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout your repo
      - name: Checkout repository
        uses: actions/checkout@v2

      # 2. Set up Docker Buildx (for multi-arch / caching, if needed)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Install Docker Compose plugin
      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v2

      # 4. Launch MinIO & Weaviate
      - name: Launch POC stack
        run: |
          docker compose -f build-context-docker-compose.yaml up -d

      # 5. Wait for Weaviate to become ready
      - name: Wait for Weaviate readiness
        run: |
          for i in $(seq 1 15); do
            if curl -fs http://localhost:8080/v1/.well-known/ready; then
              echo "✅ Weaviate is up!" && exit 0
            fi
            echo "⏳ Waiting for Weaviate (attempt $i)…"
            sleep 2
          done
          echo "❌ Weaviate did not start in time" && exit 1

      # 6. Create the schema
      - name: Create Weaviate Schema
        run: |
          curl -X POST -H "Content-Type: application/json" \
            --data @./weaviate/schema.json \
            http://localhost:8080/v1/schema

      # 7. Index sample data
      - name: Index Data
        run: |
          curl -X POST -H "Content-Type: application/json" \
            --data @./weaviate/data.json \
            http://localhost:8080/v1/objects

      # 8. Trigger a backup to MinIO
      - name: Perform Backup
        run: |
          curl -X POST -H "Content-Type: application/json" \
            --data '{"id":"backup-id"}' \
            http://localhost:8080/v1/backups/s3

      # 9. Restore from the backup
      - name: Restore Data
        run: |
          curl -X POST http://localhost:8080/v1/backups/s3/backup-id/restore

      # 10. Tear it all down
      - name: Clean up
        run: |
          docker compose -f build-context-docker-compose.yaml down